from crewai import Task
from datetime import datetime

class AIToolsUseTasks():
    #  def supervising_task(self, agent):
    #     return Task(
    #         description='oversee the entire workflow, ensuring efficient information gathering and high-quality LinkedIn post creation.',
    #         agent=agent,
    #         async_execution=True,
    #         expected_output="""
    #             Defined search parameters for the Searcher Agent to identify trending LLM/generative AI tools.
    #             Analyzed information from the Analyzer Agent, free of inconsistencies and missing details.
    #             A clear and concise user guide summary generated by the Summarizer Agent, effectively explaining how to use the tool.
    #             A professional and engaging LinkedIn post formatted by the Formatter Agent, showcasing the identified LLM/generative AI tool.
    #         """
    #     )
     
     def initial_search_task(self, agent):
        return Task(
            description='Fetch the top and trend LLM and Generative AI tools or frameworks and there usage for the past week.' ,
            agent=agent,
            async_execution=True,
            expected_output=""" A list of top AI tools title,url, creator, description, benefits, core functions, example.
            """
            # Example Output:
            # [
            #     {'title': 'InstructLab'
            #     'url': 'https://example.com/README.md'
            #     'creator ': 'IBM and redhat '
            #     'description':'InstructLab offers a comprehensive approach to LLM fine-tuning'
            #     'benefits':'Enhanced LLM Performance: Fine-tune LLMs for specific tasks, maximizing their effectiveness in real-world applications.'
            #     'core functions': ' InstructLab's open-source nature on GitHub makes it easy to get started.'
            #     'example':'The repository (https://lnkd.in/d-9kX8jH) provides comprehensive instructions and guidance to help you leverage InstructLab's capabilities for your LLM fine-tuning endeavours.'
            #     },
               
            # ]
                
            # """
        )

     def analyze_search_task(self, agent, context):
        return Task(
            description="Process the information retrieved and identify key details about the LLM/generative AI tool. and select the best topic and search more about it to gain more info about it.",
            agent=agent,
            async_execution=True,
            context=context,
            expected_output="""
                          A structured breakdown of the tool's information, including its name, creator, a concise description of:
                          title, url, creator, description, core functionalities, example and key benefits
                          """
                        #   Example Output:
                        #   InstructLab is a collaborative effort, but it was jointly initiated by two major tech companies: IBM and Red Hat.
                        #    InstructLab is a framework specifically designed for fine-tuning large language models (LLMs). Here's a breakdown of what it offers:

                        #     Fine-tuning LLMs: Similar to other techniques, InstructLab helps you adjust a pre-trained LLM to perform better on specific tasks.
                        #     Unique Approach: It combines data organization, synthetic data generation, and fine-tuning for a more comprehensive approach.
                        #     User-friendly Interface: InstructLab provides a command-line interface (CLI) for easy interaction and fine-tuning of LLMs locally on your machine.
                        #     Collaborative Training: The framework allows users to contribute question-and-answer pairs, which are then used to generate synthetic training data for further model improvement.
                        #     Overall, InstructLab is a valuable tool for anyone who wants to fine-tune LLMs for specific tasks and contribute to the development of these models.

                        #     nstructLab's open-source nature on GitHub makes it easy to get started. The repository (https://github.com/instructlab/instructlab/blob/main/README.md) provides comprehensive instructions and guidance to help you leverage InstructLab's capabilities for your LLM fine-tuning endeavors.
                        #                             .            
                        #   """
        )

     def user_guide_summary_task(self, agent,context):
        return Task(
            description='Based on the information provided, create a clear and concise explanation of what and how to use the LLM/generative AI tool.',
            agent=agent,
            async_execution=True,
            context=context,

            expected_output="""
                A user-friendly explanation outlining the steps involved in using the tool. This might include incorporating examples, but should avoid overwhelming complexity.
            """
        )
     
     def linkedin_format_task(self, agent, context, callback_fun):
        return Task(
            description='Format the information gathered by previous agents (tool name, creator, functionalities, benefits, user guide summary, url) into a professional and engaging LinkedIn post.',
            agent=agent,
            context=context,

            expected_output="""
                A well-structured LinkedIn post with a clear call to action (e.g., link to documentation or tutorials) that effectively highlights the identified LLM/generative AI tool.
            
                
                                        """,
            callback=callback_fun

        )